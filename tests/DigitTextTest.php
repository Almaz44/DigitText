<?php

namespace Helldar\DigitText;

use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-09 at 18:30:42.
 */
class DigitTextTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var DigitText
     */
    protected $object;

    /**
     * @covers Helldar\DigitText\DigitText::text
     */
    public function testText()
    {
        $this->testRu();
        $this->testEn();
    }

    /**
     * Russian localization testing.
     *
     * @author  Andrey Helldar <helldar@ai-rus.com>
     * @version 2016-11-28
     * @since   1.0
     */
    private function testRu()
    {
        $result = [
            $this->object->text()                        => 'ноль',
            $this->object->text(64.23, 'ru', true)       => 'шестьдесят четыре руб 23 коп',
            $this->object->text(764)                     => 'семьсот шестьдесят четыре',
            $this->object->text(2866)                    => 'две тысячи восемьсот шестьдесят шесть',
            $this->object->text('10,000')                => 'десять тысяч',
            $this->object->text(14383)                   => 'четырнадцать тысячи триста восемьдесят три',
            $this->object->text(20383)                   => 'двадцать тысяч триста восемьдесят три',
            $this->object->text(700383)                  => 'семьсот тысяч триста восемьдесят три',
            $this->object->text(7644383)                 => 'семь миллионов шестьсот сорок четыре тысячи триста восемьдесят три',
            $this->object->text(70043783.65, 'ru', true) => 'семьдесят миллионов сорок три тысячи семьсот восемьдесят три руб 65 коп',
            $this->object->text(786443783)               => 'семьсот восемьдесят шесть миллионов четыреста сорок три тысячи семьсот восемьдесят три',
        ];

        $this->testDigits($result);
    }

    /**
     * Testing the translation of numbers to text equivalent.
     *
     * @author  Andrey Helldar <helldar@ai-rus.com>
     * @version 2016-11-28
     * @since   1.0
     *
     * @param array $items
     */
    private function testDigits($items = [])
    {
        foreach ($items as $key => $result) {
            $this->assertEquals($result, $key);
        }
    }

    /**
     * English localization testing.
     *
     * @author  Andrey Helldar <helldar@ai-rus.com>
     * @version 2016-11-28
     * @since   1.0
     */
    private function testEn()
    {
        $result = [
            $this->object->text(null, 'en')              => 'zero',
            $this->object->text(64.23, 'en', true)       => 'sixty four dollars 23 cents',
            $this->object->text(764, 'en')               => 'seven hundred sixty four',
            $this->object->text(2866, 'en')              => 'two thousands eight hundred sixty six',
            $this->object->text('10,000', 'en')          => 'ten thousands',
            $this->object->text(14383, 'en')             => 'fourteen thousands three hundred eighty three',
            $this->object->text(20383, 'en')             => 'twenty thousands three hundred eighty three',
            $this->object->text(700383, 'en')            => 'seven hundred thousands three hundred eighty three',
            $this->object->text(7644383, 'en')           => 'seven million six hundred forty four thousands three hundred eighty three',
            $this->object->text(70043783.65, 'en', true) => 'seventy million forty three thousands seven hundred eighty three dollars 65 cents',
            $this->object->text(786443783, 'en')         => 'seven hundred eighty six million four hundred forty three thousands seven hundred eighty three',
        ];

        $this->testDigits($result);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new DigitText();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        // none
    }
}
